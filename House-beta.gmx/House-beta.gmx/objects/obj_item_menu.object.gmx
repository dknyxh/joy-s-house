<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving_x = view_xview[0]+view_wview[0]-10
moving_y = view_yview[0]+10
intro = true
intro_done = false
select = 0
buy_quit = 0
global.status = 0
obj_character.buying = 1
obj_character.selecting = 0
currentname = ""
currentmoney = 0
bought = 0
c= round(random_range(0,2))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>KEY_UP = keyboard_check_pressed(vk_up)
KEY_DOWN = keyboard_check_pressed(vk_down)
KEY_SPACE = keyboard_check_pressed(vk_space)
KEY_RIGHT = keyboard_check_pressed(vk_right)
KEY_LEFT = keyboard_check_pressed(vk_left)
draw_set_color(c_white)
draw_rectangle(view_xview[0]+view_wview[0]-10,view_yview[0]+10,moving_x,moving_y,0)
draw_set_color(c_black)
draw_rectangle(view_xview[0]+view_wview[0]-10,view_yview[0]+10,moving_x,moving_y,1)
//draw_rectangle(view_xview[0]+view_wview[0]-10-200,view_yview[0]+10,view_xview[0]+view_wview[0]-10,view_yview[0]+210,0)
//animation
if (intro)
{
    if (abs(moving_x-(view_xview[0]+view_wview[0]-10-200))&gt;20)
    {
        moving_x-=20
    }
    else
    {
        moving_x = view_xview[0]+view_wview[0]-10-200
    }
    if  (abs(moving_y-(view_yview[0]+500))&gt;20)
    {
        moving_y+=20
    }
    else
    {
        moving_y = view_yview[0]+500
        intro_done = true
    }
}
//text draw inventroy
if (intro_done)
{
    draw_set_color(c_black);
    draw_set_halign(fa_center)
    draw_set_font(font_menu)
    draw_text(view_xview[0]+view_wview[0]-10-100,view_yview[0]+10,'Name')
    draw_set_font(font_item)
    if (obj_detect.buy_what==0)
    {
        currentname = global.item[select,0]
        draw_text(view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+50,global.item[select,0])
    }
    else
    {
        currentname = global.art[select,0]
        draw_text(view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+50,global.art[select,0])
    }
    draw_set_font(font_menu)
    draw_text(view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+100,'Price')
    draw_set_font(font_item)
    if (obj_detect.buy_what==0)
    {
        currentmoney = global.item[select,1]
        draw_text(view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+150,'$'+string(global.item[select,1]))
        draw_sprite(object_get_sprite(global.item[select,2]),0,view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+300)
    }
    else
    {
        currentmoney = global.art[select,1]
        draw_text(view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+150,'$'+string(global.art[select,1]))
        draw_sprite(object_get_sprite(global.art[select,2]),0,view_xview[0]+view_wview[0]-10-100,view_yview[0]+10+300)
    }
    draw_set_font(font_menu)
    draw_text(view_xview[0]+view_wview[0]-10-150,view_yview[0]+10+400,'BUY')
    draw_text(view_xview[0]+view_wview[0]-10-50,view_yview[0]+10+400,'QUIT') 
    if (obj_detect.buy_what==0)
    {
        if(KEY_DOWN)
        {
            if (select&lt;(global.itemlen-1))
            {
                select+=1
            }
            else
            {
                select = 0
            }
            bought = 0
        }
        if (KEY_UP)
        {
            if (select&gt;0)
            {
                select -=1
            }
            else
            {
                select = global.itemlen - 1
            }
            bought = 0
        }
    }
    if (obj_detect.buy_what==1)
    {
        if(KEY_DOWN)
        {
            if (select&lt;(global.artlen-1))
            {
                select+=1
            }
            else
            {
                select = 0
            }
            bought = 0
        }
        if (KEY_UP)
        {
            if (select&gt;0)
            {
                select -=1
            }
            else
            {
                select = global.artlen - 1
            }
            bought = 0
        }
    }
    if (KEY_RIGHT)
    {
        buy_quit = 1
    }
    if (KEY_LEFT)
    {
        buy_quit = 0
    }
    //test
    //select = 0
    ///101
    draw_set_color(c_black)
    draw_rectangle(view_xview[0]+view_wview[0]-200+buy_quit*100,view_yview[0]+10+400,view_xview[0]+view_wview[0]-20-100+buy_quit*100,view_yview[0]+10+450,1)
        //draw_text(view_xview[0]+view_wview[0]-10-50,view_yview[0]+10+400,'QUIT') 
    //choose
    if (KEY_SPACE)
    {
        if (buy_quit==0)
        {
            if (obj_detect.buy_what==0)
            {
                if(obj_detect.block.have_item==noone)
                {
                    if(global.realmoney&gt;=global.item[select,1])
                    {
                        a= instance_create(obj_detect.to_place_x,obj_detect.to_place_y,global.item[select,2])
                        obj_detect.block.have_item = a 
                        a.depth = obj_detect.block.viewdepth
                        global.realmoney -=global.item[select,1]
                        bought = 1
                    }
                    else
                    {
                        bought = 2
                    }  
                }
            }
            if  (obj_detect.buy_what==1)
            {   
                with(obj_detect)
                {
                    art = instance_place(obj_detect.to_place_x,obj_detect.to_place_y,par_art)
                }
                if (obj_detect.art==noone)
                {
                    if(global.realmoney&gt;=global.art[select,1])
                    {
                        a = instance_create(obj_detect.to_place_x,obj_detect.to_place_y,global.art[select,2])
                        a.depth = obj_detect.block.viewdepth +1
                        global.realmoney -=global.art[select,1]
                        bought = 1
                    }
                    else
                    {
                        bought = 2
                    }
                }
            }
        }
        if(buy_quit == 1)
        {
            obj_character.buying =0
            obj_character.selecting = 0
            global.status = 1
            instance_destroy()
        }
        keyboard_clear(vk_space)
    }
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

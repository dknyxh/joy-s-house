<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>intro = true
intro_done = false
moving_x=view_xview[0]+10
moving_y=view_yview[0]+10
select = 1
global.status = 0
obj_character.buying = 0
obj_character.selecting = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>KEY_UP = keyboard_check_pressed(vk_up)
KEY_DOWN = keyboard_check_pressed(vk_down)
KEY_SPACE = keyboard_check_pressed(vk_space)
draw_set_color(c_white)
draw_rectangle(view_xview[0]+10,view_yview[0]+10,moving_x,moving_y,0)
draw_set_color(c_black)
draw_rectangle(view_xview[0]+10,view_yview[0]+10,moving_x,moving_y,1)
///animation
if (intro)
{
    if (abs(moving_x-(view_xview[0]+210))&gt;20)
    {
        moving_x+=20
    }
    else
    {
        moving_x = view_xview[0]+210
    }
    if  (abs(moving_y-(view_yview[0]+300))&gt;20)
    {
        moving_y+=20
    } 
    else
    {
        moving_y = view_yview[0]+300
        intro_done = true
    }
}

if(intro_done)
{
    ///text
    draw_set_color(c_black)
    draw_set_font(font_menu)
    draw_set_halign(fa_center)
    draw_text(view_xview[0]+10+100,view_yview[0]+10,"Buy")
    draw_text(view_xview[0]+10+100,view_yview[0]+10+50,"Remove")
    //draw_text(view_xview[0]+10+100,view_yview[0]+10+100,"Change")
    draw_text(view_xview[0]+10+100,view_yview[0]+10+100,"Decorate")
    draw_text(view_xview[0]+10+100,view_yview[0]+10+150,"Work")
    draw_text(view_xview[0]+10+100,view_yview[0]+10+200,"Quit")
    ///select
    draw_set_color(c_black)
    draw_rectangle(view_xview[0]+20,view_yview[0]+10+(select-1)*50,view_xview[0]+200,view_yview[0]+10+select*50,1)
    if (KEY_UP)
    {
        if (select&gt;1)
        {
            select -=1;
        }
        else
        {
            select = 5            
        }
    }
    if (KEY_DOWN)
    {
        if (select&lt;5)
        {
            select +=1;
        }
        else
        {
            select = 1            
        }
    }
    //choose
    if (KEY_SPACE)
    {
        switch (select)
        {
            case 1:
            instance_create(x,y,obj_item_menu);
            break;
            case 2:
            if (obj_detect.buy_what ==0)
            {
                with(obj_detect.block.have_item)
                {
                    instance_destroy()
                }
                obj_detect.block.have_item = noone
            }
            else if (obj_detect.buy_what==1)
            {   
                with(obj_detect)
                {
                    art = instance_place(obj_detect.to_place_x,obj_detect.to_place_y,par_art)
                    with(art)
                    {
                        instance_destroy()
                    }
                }  
            }
            global.status =1;
            break;
            case 3:instance_create(x,y,obj_decorate_menu);
            break;
            case 4:instance_create(x,y,obj_work_new);
            break;
            case 5:global.statuse = 0;instance_destroy();global.status =1;break;
        }
        obj_character.selecting = 0
        keyboard_clear(vk_space);
        instance_destroy();
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
